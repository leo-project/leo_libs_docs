leo\_pod\_manager
========================

-  `Function Index <#index>`__
-  `Function Details <#functions>`__

**Behaviours:** ```gen_server`` <gen_server.html>`__.

Function Index
--------------

+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `checkin/2 <#checkin-2>`__                | Check in a worker at a pool.                                                                                                             |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `checkin\_async/2 <#checkin_async-2>`__   | Check in a worker at a pool with asynchronous.                                                                                           |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `checkout/1 <#checkout-1>`__              | Check out a worker from a pool.                                                                                                          |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `close/1 <#close-1>`__                    | Retrieve pids of specified Id.                                                                                                           |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `code\_change/3 <#code_change-3>`__       |                                                                                                                                          |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `handle\_call/3 <#handle_call-3>`__       |                                                                                                                                          |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `handle\_cast/2 <#handle_cast-2>`__       |                                                                                                                                          |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `handle\_info/2 <#handle_info-2>`__       |                                                                                                                                          |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `init/1 <#init-1>`__                      |                                                                                                                                          |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `pool\_pids/1 <#pool_pids-1>`__           | Retrieve pids of specified Id.                                                                                                           |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `raw\_status/1 <#raw_status-1>`__         | Retrieve a raw status of specified Id.                                                                                                   |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `start\_link/6 <#start_link-6>`__         |                                                                                                                                          |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `status/1 <#status-1>`__                  | Retrieve the current status in pretty format as follows: format: { working\_process\_count, worker\_process\_count, overflow\_count }.   |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `stop/1 <#stop-1>`__                      |                                                                                                                                          |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+
| `terminate/2 <#terminate-2>`__            |                                                                                                                                          |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------+

Function Details
----------------

checkin/2
~~~~~~~~~

| ``checkin(Id::atom(), WorkerPid::pid()) -> ok | {error, any()}``

Check in a worker at a pool

checkin\_async/2
~~~~~~~~~~~~~~~~

| ``checkin_async(Id::atom(), WorkerPid::pid()) -> ok``

Check in a worker at a pool with asynchronous

checkout/1
~~~~~~~~~~

| ``checkout(Id::atom()) -> {ok, pid()} | {error, empty}``

Check out a worker from a pool

close/1
~~~~~~~

| ``close(Id::atom()) -> ok | {error, any()}``

Retrieve pids of specified Id

code\_change/3
~~~~~~~~~~~~~~

``code_change(OldVsn, State, Extra) -> any()``

handle\_call/3
~~~~~~~~~~~~~~

``handle_call(X1, From, State) -> any()``

handle\_cast/2
~~~~~~~~~~~~~~

``handle_cast(X1, State) -> any()``

handle\_info/2
~~~~~~~~~~~~~~

``handle_info(Info, State) -> any()``

init/1
~~~~~~

``init(X1) -> any()``

pool\_pids/1
~~~~~~~~~~~~

| ``pool_pids(Id::atom()) -> {ok, [pid()]} | {error, any()}``

Retrieve pids of specified Id

raw\_status/1
~~~~~~~~~~~~~

| ``raw_status(Id::atom()) -> {ok, [tuple()]} | {error, any()}``

Retrieve a raw status of specified Id

start\_link/6
~~~~~~~~~~~~~

| ``start_link(Id::atom(), NumOfChildren::pos_integer(), MaxOverflow::non_neg_integer(), WorkerMod::atom(), WorkerArgs::[any()], InitFun::function()) -> {ok, pid()} | ignore | {error, any()}``

status/1
~~~~~~~~

| ``status(Id::atom()) -> {ok, {non_neg_integer(), non_neg_integer(), non_neg_integer()}}``

Retrieve the current status in pretty format as follows: format: {
working\_process\_count, worker\_process\_count, overflow\_count }

stop/1
~~~~~~

| ``stop(Id::atom()) -> ok | {error, any()}``

terminate/2
~~~~~~~~~~~

``terminate(Reason, State) -> any()``
